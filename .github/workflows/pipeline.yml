name: Pipeline

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Build
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: build

    - name: Save Version
      run: |
        ./gradlew -q cV | sed -rn '/Project version:/p' | sed -e 's/Project version: //g' | tr -d '\n' > version.txt

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: kotlin-vertx-jar
        path: build/libs/app.jar

    - name: Upload Version File
      uses: actions/upload-artifact@v3
      with:
        name: kotlin-vertx-version
        path: version.txt

  package:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Docker
        uses: docker/setup-buildx-action@v1

      - name: Download JAR
        uses: actions/download-artifact@master
        with:
          name: kotlin-vertx-jar
          path: build/libs

      - name: Download Version File
        uses: actions/download-artifact@master
        with:
          name: kotlin-vertx-version

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: kotlin-vertx
        run: |
          VERSION="$(cat version.txt)"
          docker build -t $REGISTRY/$REPOSITORY:$VERSION .
          docker push $REGISTRY/$REPOSITORY:$VERSION
