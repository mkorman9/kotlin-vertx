buildscript {
    ext {
        kotlinVersion = '1.5.31'
        vertxVersion = '4.3.0'
        nettyVersion = '4.1.74.Final'  // must match the version used by vertx
        jacksonVersion = '2.13.3'
        mutinyVersion = '2.21.0'
        hibernateVersion = '6.0.0.Final'
        grpcVersion = '1.46.0'
        grpcKotlinVersion = '1.3.0'
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion"
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.18'
    }
}

plugins {
    id 'java'
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version "$kotlinVersion"
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'pl.allegro.tech.build.axion-release' version '1.13.6'
}

apply plugin: 'kotlin'
apply plugin: "kotlin-jpa"
apply plugin: 'com.google.protobuf'

scmVersion {
    useHighestVersion = true
    versionCreator 'versionWithBranch'
}

group 'com.github.mkorman9.vertx'
version scmVersion.version

def javaVersion = '11'
sourceCompatibility = javaVersion
targetCompatibility = javaVersion

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    implementation "io.vertx:vertx-core:$vertxVersion"
    implementation "io.vertx:vertx-web:$vertxVersion"
    implementation "io.vertx:vertx-lang-kotlin:$vertxVersion"
    implementation "io.vertx:vertx-lang-kotlin-coroutines:$vertxVersion"
    implementation "io.vertx:vertx-config:$vertxVersion"
    implementation "io.vertx:vertx-config-yaml:$vertxVersion"
    implementation "io.vertx:vertx-micrometer-metrics:$vertxVersion"
    implementation "io.vertx:vertx-rabbitmq-client:$vertxVersion"

    implementation "io.grpc:grpc-netty:$grpcVersion"
    implementation "io.grpc:grpc-protobuf:$grpcVersion"
    implementation "io.grpc:grpc-kotlin-stub:$grpcKotlinVersion"
    implementation "com.google.protobuf:protobuf-kotlin:3.21.1"

    implementation "com.google.cloud:google-cloud-pubsub:1.119.0"
    implementation "io.netty:netty-transport-native-epoll:$nettyVersion:linux-x86_64"
    implementation "io.netty:netty-transport-native-kqueue:$nettyVersion:osx-x86_64"
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'ch.qos.logback:logback-classic:1.2.11'
    implementation 'de.siegmar:logback-gelf:4.0.2'
    implementation 'org.codehaus.janino:janino:3.1.7'
    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"
    implementation 'org.hibernate.reactive:hibernate-reactive-core:1.1.4.Final'
    implementation "io.smallrye.reactive:smallrye-mutiny-vertx-core:$mutinyVersion"
    implementation "io.smallrye.reactive:smallrye-mutiny-vertx-pg-client:$mutinyVersion"
    implementation "org.hibernate.validator:hibernate-validator:$hibernateVersion"
    implementation 'dev.misfitlabs.kotlinguice4:kotlin-guice:1.6.0'
    implementation "io.micrometer:micrometer-registry-prometheus:1.8.5"
    implementation 'at.favre.lib:bcrypt:0.9.0'
    implementation 'org.reflections:reflections:0.10.2'

    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
    testImplementation "io.vertx:vertx-junit5:$vertxVersion"
    testImplementation 'io.mockk:mockk:1.12.3'
    testImplementation 'org.assertj:assertj-core:3.22.0'
    testImplementation "io.grpc:grpc-testing:$grpcVersion"
}

sourceSets {
    src {
        main {
            java {
                srcDirs 'build/generated/source/proto/main/grpc'
                srcDirs 'build/generated/source/proto/main/kotlin'
            }
        }
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.21.1'
    }

    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:$grpcVersion"
        }
        grpckt {
            artifact = "io.grpc:protoc-gen-grpc-kotlin:$grpcKotlinVersion:jdk8@jar"
        }
    }

    generateProtoTasks {
        all()*.plugins {
            grpc {}
            grpckt {}
        }
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = javaVersion
    }
    sourceCompatibility = javaVersion
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = javaVersion
    }
    sourceCompatibility = javaVersion
}

test {
    useJUnitPlatform()
}

shadowJar {
    archiveFileName = 'app.jar'
    mainClassName = 'com.github.mkorman9.vertx.MainKt'

    manifest {
        attributes 'Version': project.version
    }
    mergeServiceFiles {
        include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
    }
}
